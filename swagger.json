{
  "openapi": "3.0.0",
  "info": {
    "title": "Demo Todo app",
    "version": "1.0.0",
    "description": "API documentation for Demo Todo app"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "requestBodies": {
      "LoginBody": {
        "description": "A JSON object containing login information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "format": "password"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        }
      },
      "TodoBody": null,
      "description": "A JSON object containing user information",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/Todo",
            "properties": {
              "id": {
                "type": "string",
                "description": "User ID (primaryKey)",
                "format": "uuid"
              },
              "userName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserBody": null
    },
    "responses": {
      "BadRequestError": {
        "description": "BadRequest",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "Created": {
        "description": "Created"
      },
      "ForbiddenError": {
        "description": "User doesn't have the right permission"
      },
      "NoContent": {
        "description": "No Content"
      },
      "NotFoundError": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided."
                }
              }
            }
          }
        }
      },
      "Todo": {
        "description": "ToDoObjectschemas",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Todo"
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided."
                }
              }
            }
          }
        }
      },
      "User": {
        "description": "UserObject",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    },
    "schemas": {
      "Todo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ToDo ID (Primary Key)",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "description": "User.id (Foreign Key)",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string",
            "description": "User.id (Foreign Key)",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID (primaryKey)",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "param": {
            "type": "string",
            "example": "name"
          },
          "message": {
            "type": "string",
            "example": "cannot be blank"
          }
        }
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "",
        "operationId": "authLogin",
        "requestBody": {
          "$ref": "#/components/requestBodies/LoginBody"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register new user",
        "description": "",
        "operationId": "authRegister",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "tags": [
          "reset-password"
        ],
        "summary": "Generate token for reset password",
        "description": "",
        "operationId": "generateResetPasswordToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          }
        }
      }
    },
    "/reset-password/{passwordResetToken}": {
      "post": {
        "tags": [
          "reset-password"
        ],
        "summary": "Set new password using token",
        "description": "",
        "operationId": "useResetPasswordToken",
        "parameters": [
          {
            "in": "path",
            "name": "passwordResetToken",
            "description": "Token for reset password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "description": "New password",
                    "type": "string",
                    "format": "password"
                  },
                  "passwordConfirmation": {
                    "description": "New password confirmation",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          }
        }
      }
    },
    "/todos": {
      "post": {
        "tags": [
          "todos"
        ],
        "summary": "Create new todo object",
        "description": "",
        "operationId": "addTodo",
        "requestBody": {
          "$ref": "#/components/requestBodies/TodoBody"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Todo"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      },
      "get": {
        "tags": [
          "todos"
        ],
        "summary": "Find all todos",
        "description": "Returns a list of todos",
        "operationId": "getTodos",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/todos/{todoId}": {
      "get": {
        "tags": [
          "todos"
        ],
        "summary": "Find todo by ID",
        "description": "Returns a single todo",
        "operationId": "getTodoById",
        "parameters": [
          {
            "name": "todoId",
            "in": "path",
            "description": "ID of todo to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Todo"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      },
      "put": {
        "tags": [
          "todos"
        ],
        "summary": "Updates a todo",
        "description": "",
        "operationId": "updateTodoWithForm",
        "requestBody": {
          "$ref": "#/components/requestBodies/TodoBody"
        },
        "parameters": [
          {
            "name": "todoId",
            "in": "path",
            "description": "ID of todo to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Todo"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": [
          "todos"
        ],
        "summary": "Deletes a todo",
        "description": "",
        "operationId": "deleteTodo",
        "parameters": [
          {
            "name": "todoId",
            "in": "path",
            "description": "Todo id to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Add new user",
        "operationId": "createUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get list of users",
        "description": "",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user id",
        "description": "",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The name that needs to be fetched.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/User"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that need to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of user that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Login/Register operations"
    },
    {
      "name": "todos",
      "description": "Operations to-do items"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "reset-password",
      "description": "Reseting passwords"
    }
  ]
}